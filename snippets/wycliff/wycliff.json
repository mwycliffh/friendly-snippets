{
    "Colors list":
    {
        "prefix": "wyc-colors",
        "body":
        [
            "\n",
            "Red",
            "Yellow",
            "Orange",
            "Green",
            "Blue",
            "Brown",
            "Pink",
            "Purple",
            "\n",
            "	String normal = \"\\033[0;37m\";",
            "	String white = \"\\033[0;37m\";",
            "	String orange = \"\\033[38;2;255;125;001m\";",
            "	String green = \"\\033[0;32m\";",
            "	String red = \"\\033[0;31m\";",
            "	String yellow = \"\\033[0;33m\";",
            "	String blue = \"\\033[0;34m\";",
            "	String cyan = \"\\033[0;36m\";",
            "	String purple = \"\\033[0;35m\";",
            "\n",
            "\n"
        ],
        "description": "Just a list of colors"
    },

    "Head of file -- Commented out section":
    {
        "prefix": "wyc-head-of-file",
        "body":
        [
            "// File Name.        \t${TM_FILENAME}",
            "// Date.             \t${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "// Update.           \t${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "// Version.          \t0.0.1",
            "// Description.      \tTODO$1",
            "\n"
        ],
        "description": "Placing this at the head of each file will save time in the long run"
    },

    "Head of file -- VERBOSE variant":
    {
        "prefix": "wyc-hof-verbose",
        "body":
        [
            "//  File Name.       ${TM_FILENAME}",
            "//  Date.            ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}",
            "//  Update.          ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}",
            "//  Version.         0.0.1",
            "//  Description.     A series of exercises that will demonstrate the ability to",
            "//                   perform various Neovim-related tasks using",
            "//                   keyboard shortcuts. We will explore Tree-Toggle <TT>; Line Jump <LJ>;",
            "//                   Find-Files <FF>; Live-Grep <LG>; Some rudimentary Vim commands.",
            "//                                                                   ",
            "//  References:      https://docs.rockylinux.org/books/nvchad/nvchad_ui/nvimtree/",
            "//                   https://github.com/nvim-tree/nvim-tree.lua",
            "\n",
            "\n"
        ],
        "description": "A more verbose version of the wycliff_head_of_file snippet"
    },

    "Head of file -- PYTHON Variant":
    {
        "prefix": "wyc-python-hof",
        "body":
        [
            "#!/usr/bin/env python3     ",
            "# File Name.              ${TM_FILENAME}",
            "# Date.                   ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "# Update.                 ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "# Version.                0.0.1",
            "# Python Version.         3.10.6",
            "# Run Program.            $ python3   ${TM_FILENAME}   ",
            "# Associated Files.       other_file_one.py | other_file_two.py     ",
            "# Generate dependencies:  $ pipreqs ./ ",
            "# Install dependencies:   $ pip install -r ./requirements.txt ",
            "# Useful extras:          $ sudo apt install python-is-python3 ",
            "# Description.            TODO   ",
            "\n",
            "\n"
        ],
        "description": "Python variant of wycliff_head_of_file snippet"
    },
    "Head of file -- PYTHON Abbreviated":
    {
        "prefix": "wyc-python-abbreviated-hof",
        "body":
        [
            "#!/usr/bin/env python3",
            "# File Name              ${TM_FILENAME}",
            "# Date                   ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "# Version                0.0.1",
            "# Python Version         3.10.6",
            "# Description            TODO",
            "\n",
            "\n"
        ],
        "description": "Abbreviated version of the wycliff_python_hof snippet"
    },

    "Head of file -- Lua version one":
    {
        "prefix": "wyc-lua-hof-v1",
        "body":
        [
            "#!/usr/bin/env lua",
            "-- File Name              ${TM_FILENAME}",
            "-- Date                   ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "-- Update                 ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "-- Version                0.0.1",
            "-- Lua Version            5.1.5",
            "-- Description            TODO  \n",
            "\n",
            "\n"
        ],
        "description": "Lua commented out file header snippet"
    },

    "Template -- Commented out section":
    {
        "prefix": "wyc-brk",
        "body":
        [
            "// < ${1:Name} >  < ${2:Func/Struct} >",
            "// < ${3:Purpose-A} >",
            "// < ${4:Purpose-B} >",
            "// < ${5:Purpose-C} >",
            "// 01 - -- -- -- -- >>>>> >>>>> -- -- -- -- -- -- -",
            "// S0 - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",
            "// S1 - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",
            "// S2 - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",
            "// SN - -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",
            "// 00 - -- -- -- -- <<<<< <<<<< -- -- -- -- -- -- -\n",
            "\n",
            "\n"
        ],
        "description": "Commented out section used to boost productivity"
    },

    "Template -- Rust Struct":
    {
        "prefix": "wyc-rust-struct",
        "body":
        [
            "#[derive(Debug, Clone)]                                  ",
            "pub struct ${1:FoodBasket} { // START ${1:FoodBasket}    ",
            "    pub idn: i32,                                        ",
            "    pub apples: u32,                                     ",
            "    pub banana_bunches: Vec<i16>,                        ",
            "    pub carrots: u128,                                   ",
            "    pub ${3:melons}: u8                                  ",
            "}                                                        ",
            "                                                         ",
            "impl ${1:FoodBasket} {                                   ",
            "    pub fn new() -> ${1:FoodBasket}                      ",
            "    {                                                    ",
            "        let mut ${2:food_basket} = ${1:FoodBasket} {     ",
            "            idn: 0,                                      ",
            "            apples: 3,                                   ",
            "            banana_bunches: Vec::<i16>::new(),           ",
            "            carrots: 12,                                 ",
            "            ${3:melons}: 5                               ",
            "        };                                               ",
            "        ${2:food_basket}                                 ",
            "    }                                                    ",
            "} // END ${1:FoodBasket} IMPLEMENTATION                  ",
            "                                                         ",
            "     let mut ${2:food_basket} = ${1:FoodBasket}::new();  ",
            "     ${2:food_basket}: ${1:FoodBasket}::new();           ",
            "     let mut ${2:food_basket}: Box<${1:FoodBasket}> = Box::new(${2:food_basket});",
            "                                                       \n",
            "\n",
            "\n"
        ],
        "description": "Rust Structure Template Food Basket"
    },

    "Template -- Rust Coffee Shop Struct":
    {
        "prefix": "wyc-rust-coffee-shop-structure",
        "body":
        [
            "#[derive(Debug, Clone)]                                               ",
            "pub struct ${1:CoffeeShop} {                                          ",
            "    pub VXO: Vec<i16>,                                                ",
            "    pub VYO: Vec<i16>,                                                ",
            "    pub color: Color,                                                 ",
            "}                                                                     ",
            "                                                                      ",
            "impl ${1:CoffeeShop} {                                                ",
            "    pub fn null() -> ${1:CoffeeShop} {                                ",
            "        return ${1:CoffeeShop} {                                      ",
            "          VXO: Vec::new(),                                            ",
            "          VYO: Vec::new(),                                            ",
            "          color: Color::WHITE                                         ",
            "        };                                                            ",
            "    }                                                                 ",
            "                                                                      ",
            "    pub fn new(                                                       ",
            "        shape_type_2d: ShapeType2d,                                   ",
            "        color: Color,                                                 ",
            "        dimensions: (u32, u32),                                       ",
            "        centerpoint: Vec::<i16>,                                      ",
            "        ) -> ${1:CoffeeShop} {                                        ",
            "        let mut ${2:coffee_shop} = ${1:CoffeeShop} {                  ",
            "            VXO: Vec::<i16>::new(),                                   ",
            "            VYO: Vec::<i16>::new(),                                   ",
            "            color: Color::WHITE,                                      ",
            "        };                                                            ",
            "        let mut m = dimensions.0 as i16;                              ",
            "        if shape_type_2d == ShapeType2d::TRIANGLE                     ",
            "        {                                                             ",
            "          ${2:coffee_shop} = ${1:CoffeeShop}::build_alpha(m);         ",
            "          ${2:coffee_shop} = ${1:CoffeeShop}::build_bravo(            ",
            "            ${2:coffee_shop}.clone(),                                 ",
            "            centerpoint);                                             ",
            "          );                                                          ",
            "          ${2:coffee_shop}.color = color;                             ",
            "        }                                                             ",
            "        ${2:coffee_shop}                                              ",
            "    }                                                                 ",
            "                                                                      ",
            "    pub fn build_alpha(dimension_alpha: i16) -> ${1:CoffeeShop} {     ",
            "            let mut ${2:coffee_shop} = ${1:CoffeeShop}::null();       ",
            "            return ${2:coffee_shop};                                  ",
            "    }                                                                 ",
            "                                                                      ",
            "    pub fn build_bravo(                                               ",
            "      mut ${2:coffee_shop}: ${1:CoffeeShop},                          ",
            "      centerpoint: Vec<i16>                                           ",
            "        ) -> {1:CoffeeShop} {                                         ",
            "            let mut new_${2:coffee_shop} = {1:CoffeeShop}::null();    ",
            "            *new_{2:coffee_shop} = {1:CoffeeShop}::build_alpha(self.clone())",
            "            return new_{2:coffee_shop}                                ",
            "    }                                                                 ",
            "                                                                      ",
            "} // END ${1:CoffeeShop} IMPLEMENTATION                               ",
            "                                                                      ",
            "     let mut ${2:coffee_shop} = ${1:CoffeeShop}::new();",
            "     ${2:coffee_shop}: ${1:CoffeeShop}::new();",
            "     let mut ${2:coffee_shop}: Box<${1:CoffeeShop}> = Box::new();",
            "                                                                \n",
            "\n",
            "\n"
        ],
        "description": "Rust CoffeeShop Structure Template"
    }
}
